<?php

namespace addons\Purchase\common\models;

use addons\Sales\common\models\SaleChannel;
use Yii;
use yii\base\Model;
use common\models\backend\Member;
use addons\Warehouse\common\models\Warehouse;

/**
 * This is the model class for table "purchase_apply".
 *
 * @property int $id
 * @property string $apply_sn 申请单号
 * @property string $order_sn 客订单编号
 * @property int $channel_id 采购渠道
 * @property int $warehouse_id 入库仓库
 * @property int $delivery_time 预计交货时间
 * @property int $total_num 总数量
 * @property string $total_cost 总成本
 * @property int $auditor_id 审核人
 * @property int $audit_status 审核状态：0待审核 1通过 2不通过
 * @property int $audit_time 审核时间
 * @property string $audit_remark 审核备注
 * @property int $final_auditor_id 最终审核人
 * @property int $final_audit_time 最终审核时间
 * @property int $final_audit_status 最终审核时间
 * @property string $final_audit_remark 最终审核备注
 * @property int $apply_status 单据状态
 * @property int $follower_id 跟单人
 * @property int $status 状态
 * @property string $remark 采购备注
 * @property int $creator_id 创建人
 * @property int $created_at 创建时间
 * @property int $updated_at 更新时间
 */
class PurchaseApply extends BaseModel
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return self::tableFullName('purchase_apply');
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['channel_id'], 'required'],
            [['total_cost'], 'number'],
            [['warehouse_id','total_num','channel_id', 'auditor_id', 'audit_status', 'audit_time', 'final_auditor_id', 'final_audit_status', 'final_audit_time', 'status', 'apply_status','purchase_cate', 'follower_id', 'creator_id', 'created_at', 'updated_at'], 'integer'],
            [['apply_sn','order_sn'], 'string', 'max' => 30],            
            [['audit_remark', 'remark','final_audit_remark'], 'string', 'max' => 255],
            [['delivery_time'], 'safe'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'apply_sn' => '申请单号',
            'order_sn' => '客订单编号',                
            'total_cost' => '总成本',
            'total_num' => '总数量',
            'channel_id' => "采购渠道",
            'warehouse_id' => "入库仓库",
            'delivery_time' => "预计交货时间",
            'auditor_id' => '审核人',
            'audit_status' => '审核状态',
            'audit_time' => '审核时间',
            'audit_remark' => '审核备注',
            'final_auditor_id' => '审核人',
            'final_audit_status' => '审核状态',
            'final_audit_time' => '审核时间',
            'final_audit_remark' => '审核备注',
            'status' => '状态',
            'apply_status' => '申请单状态',
            'purchase_cate' => '采购分类',
            'remark' => '采购备注',
            'follower_id' => '跟单人',
            'creator_id' => '创建人',
            'created_at' => '创建时间',
            'updated_at' => '更新时间',
        ];
    }
    /**
     *
     * {@inheritDoc}
     * @see \yii\base\Model::afterValidate()
     */
    public function afterValidate()
    {
        if(!is_numeric($this->delivery_time)) {
            $this->setAttribute('delivery_time' , $this->delivery_time ? strtotime($this->delivery_time):0);
        }
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }
    /**
     * 跟单人
     * @return \yii\db\ActiveQuery
     */
    public function getFollower()
    {
        return $this->hasOne(Member::class, ['id'=>'follower_id'])->alias('follower');
    }
    /**
     * 创建人
     * @return \yii\db\ActiveQuery
     */
    public function getCreator()
    {
        return $this->hasOne(Member::class, ['id'=>'creator_id'])->alias('creator');
    }
    /**
     * 审核人
     * @return \yii\db\ActiveQuery
     */
    public function getAuditor()
    {
        return $this->hasOne(Member::class, ['id'=>'auditor_id'])->alias('auditor');
    }
    /**
     * 渠道
     * @return \yii\db\ActiveQuery
     */
    public function getChannel()
    {
        return $this->hasOne(SaleChannel::class, ['id'=>'channel_id'])->alias('channel');
    }
    
    /**
     * 渠道
     * @return \yii\db\ActiveQuery
     */
    public function getWarehouse()
    {
        return $this->hasOne(Warehouse::class, ['id'=>'warehouse_id'])->alias('warehouse');
    }
}
