<?php

namespace addons\Purchase\common\models;

use addons\Sales\common\models\SaleChannel;
use Yii;
use common\models\backend\Member;
use addons\Supply\common\models\Supplier;

/**
 * This is the model class for table "purchase".
 *
 * @property int $id
 * @property string $title
 * @property string $purchase_sn 采购单号
 * @property int $purchase_cate 采购分类
 * @property int $put_in_type 采购方式
 * @property int $supplier_id 供应商
 * @property int $follower_id 跟单人
 * @property string $total_cost 总成本
 * @property int $goods_total 总数量
 * @property int $creator_id 创建人
 * @property int $auditor_id 审核人
 * @property int $audit_status 审核状态
 * @property string $audit_remark 审核备注
 * @property string $apply_sn 采购申请单号
 * @property string $remark 采购备注
 * @property int $purchase_status 采购状态
 * @property int $created_at 创建时间
 * @property int $updated_at 更新时间
 */
class Purchase extends BaseModel
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return self::tableFullName('purchase');
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['total_cost'], 'number'],
            [['supplier_id','purchase_cate','put_in_type'], 'required'],
            [['id','purchase_cate','put_in_type','order_type','supplier_id','total_num', 'creator_id','follower_id','supplier_id', 'auditor_id', 'audit_status', 'purchase_status','audit_time','created_at', 'updated_at','channel_id'], 'integer'],
            [['audit_remark','apply_sn', 'remark'], 'string', 'max' => 255],
            [['purchase_sn'], 'string', 'max' => 30],
            [['audit_status'], 'checkAuditStatus'],
            ['delivery_time','safe']
        ];
    }
    /**
     * 
     * {@inheritDoc}
     * @see \yii\base\Model::afterValidate()
     */
    public function afterValidate()
    {   
        if(!is_numeric($this->delivery_time)) {
            $this->setAttribute('delivery_time' , $this->delivery_time ? strtotime($this->delivery_time):0);
        }
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }
    /**
     * 校验审核条件
     * @param unknown $attribute
     * @param unknown $params
     */
    public function checkAuditStatus($attribute, $params){
        
        if($this->audit_status == 1 && $this->total_num <= 0){
            $this->addError("audit_status","采购单没有明细");
        }else if($this->audit_status == 1 && $this->follower_id  == ''){
            $this->addError("audit_status","没有分配跟单人");
        }
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'purchase_sn' => '采购单号',
            'purchase_cate'=>"采购分类",
            'supplier_id' => '供应商',
            'purchase_type' => '采购类型',
            'order_type' => '订单类型',
            'put_in_type' =>'采购方式',
            'total_cost' => '总成本',
            'channel_id' => '采购渠道',
            'total_num' => '总数量',
            'follower_id' => '跟单人',
            'creator_id' => '创建人',
            'status' => '开启状态',
            'auditor_id' => '审核人',
            'audit_status' => '审核状态',
            'audit_time' => '审核时间',
            'audit_remark' => '审核备注',
            'delivery_time'=>'预估交货时间',
            'purchase_status' => '采购单状态 ',
            'apply_sn' => '采购申请单号',
            'remark' => '采购备注',
            'created_at' => '创建时间',
            'updated_at' => '更新时间',
        ];
    }
    /**
     * 供应商 一对一
     * @return \yii\db\ActiveQuery
     */
    public function getSupplier()
    {
        return $this->hasOne(Supplier::class, ['id'=>'supplier_id'])->alias('supplier');
    }
    /**
     * 跟单人
     * @return \yii\db\ActiveQuery
     */
    public function getFollower()
    {
        return $this->hasOne(Member::class, ['id'=>'follower_id'])->alias('follower');
    }
    /**
     * 创建人
     * @return \yii\db\ActiveQuery
     */
    public function getCreator()
    {
        return $this->hasOne(Member::class, ['id'=>'creator_id'])->alias('creator');
    }
    /**
     * 审核人
     * @return \yii\db\ActiveQuery
     */
    public function getAuditor()
    {
        return $this->hasOne(Member::class, ['id'=>'auditor_id'])->alias('auditor');
    }

    /**
     * 渠道
     * @return \yii\db\ActiveQuery
     */
    public function getChannel()
    {
        return $this->hasOne(SaleChannel::class, ['id'=>'channel_id'])->alias('channel');
    }
}
